<?php
/**
 * @file
 * Base class 
 */

abstract class MetatagTagsTestBase extends MetatagTestHelper {

  /**
   * All of the meta tags defined by this module which will be tested.
   */
  public $tags = array();

  /**
   * {@inheritdoc}
   */
  function setUp(array $modules = array()) {
    parent::setUp($modules);

    // Create an admin user that can manage meta tags.
    $account = $this->createAdminUser();
    $this->drupalLogin($account);
  }

  /**
   * Tests that this module's tags are available.
   */
  function testTagsArePresent() {
    // Load the global config.
    $this->drupalGet('admin/config/search/metatags/config/global');
    $this->assertResponse(200);

    // Confirm the various meta tags are available.
    foreach ($this->tags as $tag) {
      // Convert tag names to something more suitable for a function name.
      $tagname = str_replace(array('.', '-', ':'), '_', $tag);

      // Look for a custom method named "{$tagname}_test_xpath", if found use
      // that method to get the xpath definition for this meta tag, otherwise it
      // defaults to just looking for a text input field.
      $method = "{$tagname}_test_xpath";
      if (method_exists($this, $method)) {
        $xpath = $this->$method();
      }
      else {
        $xpath = "//input[@name='metatags[und][{$tag}][value]' and @type='text']";
      }
      $this->assertFieldByXPath($xpath, NULL, format_string('The "%tag" tag field was found.', array('%tag' => $tag)));
    }
  }

  /**
   * Confirm that the meta tags can be saved.
   */
  function testTagsAreSaveable() {
    // Load the global config.
    $this->drupalGet('admin/config/search/metatags/config/global');
    $this->assertResponse(200);

    // Update the Global defaults and test them.
    $values = array();
    foreach ($this->tags as $tag) {
      // Convert tag names to something more suitable for a function name.
      $tagname = str_replace(array('.', '-', ':', ' '), '_', $tag);

      // Look for a custom method named "{$tagname}_test_key", if found use
      // that method to get the test string for this meta tag, otherwise it
      // defaults to the meta tag's name.
      $method = "{$tagname}_test_key";
      if (method_exists($this, $method)) {
        $test_key = $this->$method();
      }
      else {
        $test_key = "metatags[und][{$tag}][value]";
      }

      // Look for a custom method named "{$tagname}_test_value", if found use
      // that method to get the test string for this meta tag, otherwise it
      // defaults to just generating a random string.
      $method = "{$tagname}_test_value";
      if (method_exists($this, $method)) {
        $test_value = $this->$method();
      }
      else {
        $test_value = $this->randomString();
      }

      $values[$test_key] = $test_value;
    }
    $this->drupalPost(NULL, $values, 'Save');
    $this->assertText(strip_tags(t('The meta tag defaults for @label have been saved.', array('@label' => 'Global'))));
  }

}
